package com.seansoper.batil.brokers.etrade.services.orderPreview

import com.seansoper.batil.OptionsCalendar
import com.seansoper.batil.brokers.etrade.api.OptionType
import com.seansoper.batil.brokers.etrade.api.OrderActionType
import com.seansoper.batil.brokers.etrade.api.OrderType
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewInstrumentOption
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewOrderLimit
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewOrderMarket
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewProductOption
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewRequest
import java.time.ZonedDateTime

/**
 * Buy a put option using a limit price
 * @param[symbol] The market symbol for the security being bought
 * @param[limitPrice] The highest price at which to buy or the lowest price at which to sell if specified in a limit order
 * @param[strikePrice] The strike price for the option
 * @param[quantity] The number of options to buy
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
 */
fun buyPutOptionLimit(
    symbol: String,
    limitPrice: Float,
    strikePrice: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {

    return PreviewRequest(
        orderType = OrderType.OPTN,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderLimit(
                limitPrice = limitPrice,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.BUY_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.PUT,
                            expiry,
                            strikePrice
                        )
                    )
                )
            )
        )
    )
}

/**
 * Sell a put option using a limit price.
 * @param[symbol] The market symbol for the security being sold
 * @param[limitPrice] The highest price at which to buy or the lowest price at which to sell if specified in a limit order
 * @param[strikePrice] The strike price for the option
 * @param[quantity] The number of options to sell
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
 */
fun sellPutOptionLimit(
    symbol: String,
    limitPrice: Float,
    strikePrice: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {

    return PreviewRequest(
        orderType = OrderType.OPTN,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderLimit(
                limitPrice = limitPrice,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.SELL_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.PUT,
                            expiry,
                            strikePrice
                        )
                    )
                )
            )
        )
    )
}

/**
 * Buy a put option using the market price.
 * @param[symbol] The market symbol for the security being bought
 * @param[limitPrice] The highest price at which to buy or the lowest price at which to sell if specified in a limit order
 * @param[stopPrice] The designated boundary price for a stop order
 * @param[strikePrice] The strike price for the option
 * @param[quantity] The number of options to buy
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
 */
fun buyPutOptionMarket(
    symbol: String,
    limitPrice: Float,
    stopPrice: Float,
    strikePrice: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {

    return PreviewRequest(
        orderType = OrderType.OPTN,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderMarket(
                limitPrice = limitPrice,
                stopPrice = stopPrice,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.BUY_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.PUT,
                            expiry,
                            strikePrice
                        )
                    )
                )
            )
        )
    )
}

/**
 * Sell a put option using the market price.
 * @param[symbol] The market symbol for the security being sold
 * @param[limitPrice] The highest price at which to buy or the lowest price at which to sell if specified in a limit order
 * @param[stopPrice] The designated boundary price for a stop order
 * @param[strikePrice] The strike price for the option
 * @param[quantity] The number of options to sell
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
 */
fun sellPutOptionMarket(
    symbol: String,
    limitPrice: Float,
    stopPrice: Float,
    strikePrice: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {

    return PreviewRequest(
        orderType = OrderType.OPTN,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderMarket(
                limitPrice = limitPrice,
                stopPrice = stopPrice,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.SELL_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.PUT,
                            expiry,
                            strikePrice
                        )
                    )
                )
            )
        )
    )
}
