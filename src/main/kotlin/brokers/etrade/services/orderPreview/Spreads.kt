package brokers.etrade.services.orderPreview

import com.seansoper.batil.OptionsCalendar
import com.seansoper.batil.brokers.etrade.api.OptionType
import com.seansoper.batil.brokers.etrade.api.OrderActionType
import com.seansoper.batil.brokers.etrade.api.OrderPriceType
import com.seansoper.batil.brokers.etrade.api.OrderType
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewInstrumentOption
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewOrderLimit
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewProductOption
import com.seansoper.batil.brokers.etrade.api.orderPreview.PreviewRequest
import com.seansoper.batil.brokers.etrade.services.orderPreview.randomString
import java.time.ZonedDateTime

/**
 * Buy a call spread aka call debit spread aka bull call spread
 * @param[symbol] The market symbol for the security being bought
 * @param[limitPrice] The highest price at which to buy or the lowest price at which to sell if specified in a limit order
 * @param[buyStrike] The strike to buy a call on
 * @param[sellStrike] The strike to sell a call on
 * @param[quantity] The number of spreads to buy
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
 * @sample com.seansoper.batil.samples.Orders.buyCallDebitSpread
 */
fun buyCallSpread(
    symbol: String,
    limitPrice: Float,
    buyStrike: Float,
    sellStrike: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {
    require(buyStrike < sellStrike) { "Buy strike must be less than the sell strike" }

    return PreviewRequest(
        orderType = OrderType.SPREADS,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderLimit(
                limitPrice = limitPrice,
                priceType = OrderPriceType.NET_DEBIT,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.BUY_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.CALL,
                            expiry,
                            buyStrike
                        )
                    ),
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.SELL_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.CALL,
                            expiry,
                            sellStrike
                        )
                    )
                )
            )
        )
    )
}

/**
 * Sell a call spread aka call credit spread aka bear call spread
 * @param[symbol] The market symbol for the security being bought
 * @param[limitPrice] The highest price at which to  or the lowest price at which to sell if specified in a limit order
 * @param[buyStrike] The strike to buy a call on
 * @param[sellStrike] The strike to sell a call on
 * @param[quantity] The number of spreads to sell
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
  */
fun sellCallSpread(
    symbol: String,
    limitPrice: Float,
    buyStrike: Float,
    sellStrike: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {
    require(buyStrike > sellStrike) { "Buy strike must be greater than the sell strike" }

    return PreviewRequest(
        orderType = OrderType.SPREADS,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderLimit(
                limitPrice = limitPrice,
                priceType = OrderPriceType.NET_CREDIT,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.BUY_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.CALL,
                            expiry,
                            buyStrike
                        )
                    ),
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.SELL_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.CALL,
                            expiry,
                            sellStrike
                        )
                    )
                )
            )
        )
    )
}

/**
 * Buy a put spread aka put debit spread aka bear put spread
 * @param[symbol] The market symbol for the security being bought
 * @param[limitPrice] The highest price at which to buy or the lowest price at which to sell if specified in a limit order
 * @param[buyStrike] The strike to buy a put on
 * @param[sellStrike] The strike to sell a put on
 * @param[quantity] The number of spreads to buy
 * @param[expiry] The date the option will expire
 * @param[clientOrderId] A reference ID generated by the developer that is used to ensure that a duplicate order is not being submitted. This reference ID may be any value of 20 or less alphanumeric characters but must be unique within the account. This field does not appear in any API responses.
 */
fun buyPutSpread(
    symbol: String,
    limitPrice: Float,
    buyStrike: Float,
    sellStrike: Float,
    quantity: Int,
    expiry: ZonedDateTime = OptionsCalendar.nextMonthly(),
    clientOrderId: String = randomString()
): PreviewRequest {
    require(buyStrike > sellStrike) { "Buy strike must be greater than the sell strike" }

    return PreviewRequest(
        orderType = OrderType.SPREADS,
        clientOrderId = clientOrderId,
        orders = listOf(
            PreviewOrderLimit(
                limitPrice = limitPrice,
                priceType = OrderPriceType.NET_DEBIT,
                instruments = listOf(
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.BUY_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.PUT,
                            expiry,
                            buyStrike
                        )
                    ),
                    PreviewInstrumentOption(
                        orderAction = OrderActionType.SELL_OPEN,
                        quantity = quantity,
                        product = PreviewProductOption(
                            symbol,
                            OptionType.PUT,
                            expiry,
                            sellStrike
                        )
                    )
                )
            )
        )
    )
}
